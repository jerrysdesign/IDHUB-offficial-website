{
  "component": {
    "title": "IDHub will provide",
    "list": [
      {
        "itemName":"smartContract",
        "icon": "icon-component--01",
        "img": "icon-tech-01",
        "note": "Smart contract defined",
        "name": "identifier"
      },
      {
        "itemName":"sdk",
        "icon": "icon-component--02",
        "img": "icon-tech-02",
        "note": "Connecting identity to identifier",
        "name": "SDK"
      },
      {
        "itemName":"wallet",
        "icon": "icon-component--03",
        "img": "icon-tech-03",
        "note": "Blockchain based",
        "name": "identity wallet"
      },
      {
        "itemName":"token",
        "icon": "icon-component--04",
        "img": "icon-tech-04",
        "note": "Highly stable",
        "name": "native token"
      }
    ]
  },
  "optrationFlot": {
    "title": "操作流程",
        "step": [
      {
        "title": "创建",
        "decstion": "用户自主创建身分，通过私钥实现交易控制，数据上链注册，可以设置数字身分代理以保证合约控制权"
      },
      {
        "title": "认证",
        "decstion": "通过具有公信力的组织或个人，运用私钥对数据签名，第三方通过公钥验证方式位用户背书"
      },
      {
        "title": "查询",
        "decstion": "通过用户授权，第三方可以用区块链浏览器查询数字身分链上数据，也可以调用数据储存模块的接口查询"
      },
      {
        "title": "授权",
        "decstion": "用户享受自由权力，通过私钥签名，用户可授权第三方调用数字存储模块的接口查询和使用身分信息"
      }
    ]
  },
  "techs": {
    "title": "IDHub Technical Components",
    "list":[
      {
        "itemName": "Solidity",
        "title": "The smart contract based identities can attest and verify claims from individuals or institutions.  It can also control cryptocurrencies or tokenized assets.",
        "icon": "icon-key-tech-01"
      },
      {
        "itemName": "Merkle",
        "title": "A Merkle tree is a hash based data structure that is a generalization of the hash list. It is a tree structure in which each leaf node is a hash of a block of data, and each non-leaf node is a hash of its children. Merkle trees are used in distributed system for efficient data verification. We use Merkle trees to realize the least disclosure of user data.",
        "icon": "icon-key-tech-02"
      },
      {
        "itemName": "openPDS",
        "title": "OpenPDS stores user data. It allows external query only if the user grants permission.",
        "icon": "icon-key-tech-03"
      },
      {
        "itemName": "Kademlia",
        "title": "Kademlia is a distributed hash table for decentralized peer-to-peer networks. Kademlia uses a distance calculation between two nodes. This distance is computed as the exclusive or (XOR) of the two node identifiers. Kademlia offers latency-minimized routing.",
        "icon": "icon-key-tech-04"
      },
      {
        "itemName": "JWT",
        "title": "JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact JSON format for claims. This format can be signed, authorized, and verified.",
        "icon": "icon-key-tech-05"
      },
      {
        "itemName": "Graph",
        "title": "The interactions among identities are depicted as an identity graph in which each node is an identity and each edge is an action. The actions are converted to transactions on blockchain. An identity of IDHub is represented by a Merkle tree and an identity graph.",
        "icon": "icon-key-tech-06"
      }
    ]
  }
}
